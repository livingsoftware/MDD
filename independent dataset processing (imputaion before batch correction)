library(sva)
library(ggplot2)
library(ggfortify)
library(tidyverse)
library(preprocessCore)
library(FNN)
## this script is imputation before batch correction , and it is not single sample compatable
setwd(" ")
# reading data   
data=readRDS("76826.rds") # independent dataset
train1=readRDS("train1.batch-corrected.rds")
train=readRDS("train1.rds")
train=train[,-c(1:4)]
p.train=train1[c(11069:11072),]
p.train=as.data.frame(t(p.train))
train1=train1[-c(11069:11072),]
p.dat=read.csv("p.exv.csv")
data=as.matrix(data)
class(data)="numeric"
data=log2(data)
train=as.matrix(train)
class(train)="numeric"
train=log2(train)
data=data[intersect(rownames(data),rownames(train1)),]
###########################normalisation################################
trainn=normalize.quantiles(t(train),keep.names = T,copy = T)
train=trainn[intersect(rownames(data),rownames(trainn)),]
targets=normalize.quantiles.determine.target(train,target.length = NULL,subset = NULL)
Data=normalize.quantiles.use.target(data,targets)
dimnames(Data)=dimnames(data)
boxplot(Data,outline=F)
boxplot(trainn,outline=F) 
###########################imputation############################
v.data=data.frame()
train=t(train)
Dat=t(Data)
for (x in 1:dim(Dat)[1]) {
  #kNN
  Train=trainn[intersect(rownames(trainn),colnames(Dat)),]
  norm.dat=Dat[x,,drop=F]
  train=as.data.frame(t(Train))
  norm.dat=as.data.frame(t(norm.dat))
  Train=as.data.frame(Train)
  Train=as.matrix(Train)
  class(Train)="numeric"
  #Train=2^Train
  k <- knn((t(Train)),t(norm.dat), factor(p.train[,2]), k = 20, algorithm="cover_tree")
  indices = attr(k, "nn.index")
   print(indices[1, ])
 dists = attr(k, "nn.dist")
  print(dists[1, ])
  n=indices[1,1]
  Norm.dat=t(norm.dat)
  train=trainn
  sub=setdiff(rownames(train),colnames(Norm.dat))
  sub=as.data.frame(sub)
  sub[colnames(norm.dat)]=NA
  row.names(sub)=sub$sub
  sub=sub[,2,drop=F]
  train=as.matrix(train)
  class(train)="numeric"
  sub[1]=train[intersect(row.names(train),row.names(sub)),n,drop=F]
  dat=rbind(sub,t(Norm.dat))
  v.data=rbind(v.data,t(dat))
  
}
####################batch correction###########################
p.data=rbind(p.dat,(p.train))
test=cbind(t(v.data),train1)
a=p.data
a$ref=1
a$ref[1:22]=2
a$sample="train"
a$sample[1:22]="independant test"
mod=model.matrix(~1,data = a)
test=as.matrix(test)
class(test)="numeric"

c.t=ComBat(test,batch = a$ref,mod=mod,ref.batch = "1")
pqr=prcomp(t(c.t),scale. = T)
autoplot(pqr, data=a, colour= "sample")+ theme_bw()
Dat=c.t[,1:22]
p.train=as.data.frame(t(p.train))
save(Dat,"ex2.rds")
